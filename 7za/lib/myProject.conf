; Resource Bundle
;
; --------------------------------------------------------------------------
; <purpose>
; This file contains settings, translations and any other kind of
; information, which can be easily edited from the admin of this application.
; It is meant for those settings and values which should not be 
; hardcoded within the php code. So it provides a central place for all
; those informations.
; --------------------------------------------------------------------------
;
; <usage>
; ****** comments ******
; - comments must start with semicolon (;)
;
; ****** section_header ******
; - lines that contains smth. [whatever] are section_header's
; - a valid section header contains no whitespaces
; - there are reserved words which must not be used as section_headers.
;   These include: null, yes, no, true, and false.
; - DONT translate section_header's or edit them in any way
; 
; ****** params ******
; - a valid param is the first word of a line which is:
;      - NOT a section_header
;      - OR a comment 
;      - OR an empty line.
; - MUST be in a form of param_name = param_value
; - naming of params have same rules as section names
; - if a value of parameter contains any non-alphanumeric characters it needs
;   to be enclosed in double-quotes ("). 
; --------------------------------------------------------------------------
;
; <hints_for_developers>
; A good example when to use this resource bundle is the following:
; You get a record from a mysql database and one of fields has the type 
; enum. The content of this enum field is e.g.: 'not_confirmed'. Now
; you need to display this within the webinterface, but an output  like 
; 'not_confirmed' dont looks appropriate, even if the app. language is 
; english . You have to translate this value, but the php source code is 
; not a proper place for such a translation. So now you can use the 
; resource bundle:
; 
; // translate an enum field
; if( $result['enum_field'] == 'not_confirmed' )
;    $result['enum_field'] = $this->rb['enum_fields']['not_confirmed'];
; else
;    $result['enum_field'] = $this->rb['enum_fields']['is_confirmed'];
; 
; In this case this file should contain the following lines
;     [enum_fields] 
;     not_confirmed = action is not confirmed
;     is_confirmed = action is confirmed
;
; Another field of application are system messages. They should not be
; hardcoded within the sources as well as the values of the <title> tags.
; --------------------------------------------------------------------------
;

; 
; This header the values of the title tags
; the param name should match the appropriate filename
;
[titles]
index		        = test project


[messages]


; This header defines the css classes that where used to
; render table rows in alternating colors
;
[styles]
altRow1         = tab_body1
altRow2         = tab_body2

[language]
langFile        = rus.conf

[admin]
email           = support@fairpoint.com.ua
reports_email   = support@fairpoint.com.ua
